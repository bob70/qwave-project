-- File: digital_decimator.vhd
-- Generated by MyHDL 0.7
-- Date: Thu May  9 20:55:49 2013


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_07.all;

entity digital_decimator is
    port (
        clk: in std_logic;
        reset: in std_logic;
        dataIn: in unsigned(15 downto 0);
        dataOut: out unsigned(15 downto 0);
        decimationRatio: in unsigned(8 downto 0);
        dataClk: in std_logic
    );
end entity digital_decimator;
-- clk - input - clock
-- reset - asynchronous reset
-- dataIn - input - data to be decimated
-- dataOut - output - decimated data
-- decimationRatioBase - base of oversamplig ratio i.e. 2^0, 2^1, 2^2 etc..
-- dataClk - decimated data clock

architecture MyHDL of digital_decimator is

signal dataOut_decimated: unsigned(15 downto 0);

begin



-- Decimated digital data by always taking first sample of decimated interval
DIGITAL_DECIMATOR_OUTPUT: process (dataClk, reset) is
begin
    if (reset = '1') then
        dataOut_decimated <= "0000000000000000";
    elsif rising_edge(dataClk) then
        if to_boolean(dataClk) then
            dataOut_decimated <= dataIn;
        end if;
    end if;
end process DIGITAL_DECIMATOR_OUTPUT;

-- Connects otput straight if decimation is set to 1:1
DIGITAL_DECIMATOR_OUTPUTCONNECT: process (clk, reset) is
begin
    if (reset = '1') then
        dataOut <= "0000000000000000";
    elsif rising_edge(clk) then
        if (decimationRatio = 1) then
            dataOut <= dataIn;
        else
            dataOut <= dataOut_decimated;
        end if;
    end if;
end process DIGITAL_DECIMATOR_OUTPUTCONNECT;

end architecture MyHDL;
