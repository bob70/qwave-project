-- File: trigger_analog.vhd
-- Generated by MyHDL 0.7
-- Date: Thu May  9 20:55:49 2013


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_07.all;

entity trigger_analog is
    port (
        clk: in std_logic;
        reset: in std_logic;
        dataIn: in unsigned(7 downto 0);
        triggerType: in std_logic;
        slope: in std_logic;
        value: in unsigned(7 downto 0);
        trigger: out std_logic;
        inputEnable: in std_logic;
        alwaysEn: in std_logic
    );
end entity trigger_analog;
-- Simple analog trigger.
-- clk - clock
-- reset - asynchronous reset
-- dataIn - data to trigger
-- triggerType - 0 threshold, 1 edge
-- slope - 0 falling, 1 rising
-- trigger - 1 triggered / 0 not triggered
-- value - value to be triggered on
-- inputEnable - clock of data coming from decimator, on which frequency data is checked in trigger
-- alwaysEn - use clk instead of inputEnable (used when decmiation is set to 1:1)

architecture MyHDL of trigger_analog is

signal previousValue: unsigned(7 downto 0);
signal valuesCompared: unsigned(1 downto 0);
signal clkEn: std_logic;

begin



-- This process defines triggering. Trigger triggers according to selected trigger mode 
-- /threshold or edge/ and trigger slope /rising or falling/
TRIGGER_ANALOG_TRIGGERING: process (clk, reset) is
begin
    if (reset = '1') then
        trigger <= '0';
        previousValue <= "00000000";
        valuesCompared <= "00";
    elsif rising_edge(clk) then
        if (not to_boolean(inputEnable)) then
            clkEn <= '1';
        end if;
        if (to_boolean(inputEnable) and (to_boolean(clkEn) or to_boolean(alwaysEn))) then
            clkEn <= '0';
            previousValue <= dataIn;
            if (triggerType = '1') then
                if (slope = '1') then
                    if (previousValue <= dataIn) then
                        if (valuesCompared = 3) then
                            valuesCompared <= "11";
                        else
                            valuesCompared <= (valuesCompared + 1);
                        end if;
                    end if;
                    if ((value <= dataIn) and (valuesCompared = 3)) then
                        trigger <= '1';
                    else
                        trigger <= '0';
                    end if;
                else
                    if (previousValue >= dataIn) then
                        if (valuesCompared = 3) then
                            valuesCompared <= "11";
                        else
                            valuesCompared <= (valuesCompared + 1);
                        end if;
                    end if;
                    if ((value >= dataIn) and (valuesCompared = 3)) then
                        trigger <= '1';
                    else
                        trigger <= '0';
                    end if;
                end if;
            else
                if (slope = '1') then
                    if (value <= dataIn) then
                        trigger <= '1';
                    else
                        trigger <= '0';
                    end if;
                else
                    if (value >= dataIn) then
                        trigger <= '1';
                    else
                        trigger <= '0';
                    end if;
                end if;
            end if;
        end if;
    end if;
end process TRIGGER_ANALOG_TRIGGERING;

end architecture MyHDL;
